class EngagedlyArticleButton extends HTMLElement {
  connectedCallback() {
    this.setConfig();
    this.setHTMLContent();
  }
  setConfig() {
    // debugger
    this.text = this.getAttribute("text");
    this.type = this.getAttribute("type");
    $(this).empty();
  }
  setHTMLContent() {
    this.innerHTML = JSTX["eng-article-button"]({ items: this });
    // // <div class="eng-example-button">
    // <button type="secondary">Edit</button>
    // </div>
  }
}
customElements.define("eng-article-button", EngagedlyArticleButton);

class EngagedlyArticleCard extends HTMLElement {
  connectedCallback() {
    this.setConfig();
    this.setHTMLContent();
    this.$values = $(this).find(".forms > input");
    this.$content = $(this).find(
      ".input-field > .eng-article-textfield > textarea"
    );

    this.$edit_content = $(this).find(".edit-content-data > textarea");
    this.$dataField = $(this).find(".content-data > label");
    this._setEvents();
  }
  setConfig() {
    this.placeholder = this.getAttribute("placeholder");
    this.name = this.getAttribute("name");
    this.titles = this.getAttribute("titles");
    this.content = this.getAttribute("content");
    this.type = this.getAttribute("type");
    this.tester = this.type == "input";

    $(this).empty();
  }
  setHTMLContent() {
    this.innerHTML = JSTX["eng-article-card"]({ items: this });
  }

  _setEvents() {
    $(this).find(".save").on("click", this._addArticle.bind(this));
    $(this).find(".delete").on("click", this._deleteArticle.bind(this));
    $(this).find(".edit").on("click", this._edit_content.bind(this));
    $(this).on("toggleEditField", this._toggleeditfield.bind(this));
    $(this).on("toggleSaveField", this._toggleSavefield.bind(this));
    $(this).find(".save-article").on("click", this._addSavedArticle.bind(this));
  }

  _addArticle() {
    console.log("clicked");
    const titles = this.$values[0].value;
    const content = this.$content[0].value;
    var obj = {
      title: titles,
      cont: content,
    };
    console.log(obj);
    console.log(this)
    if (!titles && !content) console.log("Invalid input");
    else $(this).trigger("adding", [titles, content]);
    this.$values[0].value = null;
    this.$content[0].value = null;
  }

  _deleteArticle(e) {
    console.log("clinked");
    this.remove();
  }

  _edit_content() {
    console.log("Clicked edit button");
    $(this).find(".edit-content-data").toggle();
    $(this).find(".save-article").toggle();
    $(this).trigger("toggleEditField");
  }
  _toggleeditfield(e) {
    $(this).find(".content-data").toggle();
    $(this).find(".edit").toggle();
  }
  _toggleSavefield(e) {
    $(this).find(".edit-content-data").toggle();
    $(this).find(".save-article").toggle();
  }
  _addSavedArticle() {
    const edited = this.$edit_content[0].value;
    this.$dataField[0].innerHTML = edited;
    const d = this.$dataField[0].innerHTML;
    console.log(d);
    console.log(this)

    $(this).find(".content-data").toggle();
    $(this).find(".edit").toggle();
    $(this).trigger("toggleSaveField");
    $(this).trigger("update", edited);
  }
}

customElements.define("eng-article-card", EngagedlyArticleCard);

class EngagedlyArticleviewCard extends HTMLElement {
  connectedCallback() {
    this.setConfig();
    this.setHTMLContent();
    this._setEvents();
  }
  setConfig() {
    this.action_form = this.getAttribute("action-form");
    this.titles = this.getAttribute("titles");
    this.content = this.getAttribute("content");
    $(this).empty();
  }
  setHTMLContent() {
    this.innerHTML = JSTX["eng-articleview-card"]({ items: this });
  }

  _setEvents() {
    $(this).find(".signup").on("click", this._openSignup.bind(this));
    $(this).find(".cancelbtn").on("click", this._closeSignup.bind(this));
  }

  _openSignup() {
    document.getElementById("id01").style.display = "block";
  }
  _closeSignup() {
    document.getElementById("id01").style.display = "none";
  }
}

customElements.define("eng-articleview-card", EngagedlyArticleviewCard);

class EngagedlyLoginForm extends HTMLElement {
  connectedCallback() {
    this.setConfig();
    this.setHTMLContent();
    this._setEvents();
  }
  setConfig() {
    this.action_form = this.getAttribute("action-form");
    $(this).empty();
  }
  setHTMLContent() {
    this.innerHTML = JSTX["eng-login-form"]({ items: this });
  }

  _setEvents() {
    $(this).find(".login").on("click", this._openLogin.bind(this));
    $(this).find(".cancelbtn").on("click", this._closeLogin.bind(this));
  }

  _openLogin() {
    document.getElementById("login").style.display = "block";
  }
  _closeLogin() {
    document.getElementById("login").style.display = "none";
  }
}

customElements.define("eng-login-form", EngagedlyLoginForm);

class EngagedlySingupForm extends HTMLElement {
  connectedCallback() {
    this.setConfig();
    this.setHTMLContent();
    this._setEvents();
  }
  setConfig() {
    this.action_form = this.getAttribute("action-form");
    $(this).empty();
  }
  setHTMLContent() {
    this.innerHTML = JSTX["eng-signup-form"]({ items: this });
  }

  _setEvents() {
    $(this).find(".signup").on("click", this._openSignup.bind(this));
    $(this).find(".cancelbtn").on("click", this._closeSignup.bind(this));
  }

  _openSignup() {
    document.getElementById("id01").style.display = "block";
  }
  _closeSignup() {
    document.getElementById("id01").style.display = "none";
  }
}

customElements.define("eng-signup-form", EngagedlySingupForm);

class EngagedlyUniCard extends HTMLElement {
  connectedCallback() {
    this.setConfig();
    this.setHTMLContent();
  }
  setConfig() {
    this.cardtitle = this.getAttribute("card-title");
    this.childrens = $(this).children("eng-selector").prop("outerHTML");
    $(this).empty();
  }
  setHTMLContent() {
    this.innerHTML = JSTX["eng-uni-card"]({ items: this });
  }
}
customElements.define("eng-uni-card", EngagedlyUniCard);
